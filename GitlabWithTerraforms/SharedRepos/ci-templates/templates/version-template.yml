variables:
  GITLAB_URI: "https://${CI_SERVER_HOST}/api/v4/projects/$CI_PROJECT_ID/repository"
  GITLAB_TOKEN: $GITLAB_API_TOKEN

stages:
  - prepare

.version_rules:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - if: $CI_COMMIT_REF_NAME == "main" || $CI_COMMIT_REF_NAME == "develop" || $CI_COMMIT_REF_NAME =~ /^release/

calculate version number:
  stage: prepare
  image: 
    name: bash
  before_script:
    - apk --no-cache add jq curl
  script:
    - |- 
        export VERSION_SUFFIX=""
        export BRANCH="$CI_COMMIT_REF_NAME"
        if [[ -z "$CI_COMMIT_TAG" ]]; then 
            echo "Try to get the latest tag from the api"
            export CI_COMMIT_TAG=$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "$GITLAB_URI/tags?order_by=updated&sort=desc&per_page=1" | jq -r '.[0].name') 
        fi
    - |- 
        if [[ -n "$CI_COMMIT_TAG" ]]; then 
            echo "Try to get the commit id for the latest tag"
            export COMMIT_ID=$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "$GITLAB_URI/repository/commits/tags/$CI_COMMIT_TAG" | jq -r '.id')  
        fi
    - |-
        if [[ $CI_COMMIT_TAG =~ ^v(([1-9]\d*)|([0]{1}))[\.](([1-9]\d*)|([0]{1}))[\.](([1-9]\d*)|([0]{1}))$ ]]; then
            echo "We have a valid version number in the tag, using it"
            export VERSION_NUMBER="${CI_COMMIT_TAG:1}"
        else
            echo "Set the version number to the default"
            export CI_COMMIT_TAG=""
            export VERSION_NUMBER="0.1.0"
        fi   
    - |-
        if [[ "$BRANCH" =~ ^release/ ]]; then
            export BRANCH=$(echo "$BRANCH" | sed 's/\//%2F/g')
            export VERSION_SUFFIX="-RC"
        fi
    - |-
        if [[ -z "$COMMIT_ID" || "$COMMIT_ID" == "null" ]]; then
            echo "Looking up the First commit on the branch"
            export LAST_COMMIT=$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "$GITLAB_URI/commits?ref_name=$BRANCH&per_page=200" | jq -r '.[-1].id')
        else
            export LAST_COMMIT=$COMMIT_ID
        fi
    - |-
        echo "Get the number of commits that have been made since the last release"
        export NUM_COMMITS=$(curl --header "PRIVATE-TOKEN: $GITLAB_TOKEN" "$GITLAB_URI/compare?from=$LAST_COMMIT&to=$CI_COMMIT_SHA" | jq -r '.commits | length') 
    - |-
        if [[ "$BRANCH" == "main" ]]; then
            if [[ -z "$CI_COMMIT_TAG" ]]; then
                export VERSION_NUMBER="$((${CI_COMMIT_TAG:1:1} + 1)).0"
            else
                export VERSION_NUMBER="1.0.0"
            fi
        else
            export VERSION_SUFFIX="$VERSION_SUFFIX-$NUM_COMMITS-$CI_COMMIT_SHORT_SHA"
        fi
    - |- 
        export VERSION_NUMBER="$VERSION_NUMBER$VERSION_SUFFIX"
    - |-
        echo "Version Number: $VERSION_NUMBER"
        echo VERSION_NUMBER="$VERSION_NUMBER" >> version_number.env 
    - |-
        echo "Last Commit: $LAST_COMMIT"
    - |-
        echo "Number of Commits: $NUM_COMMITS"
  rules:
    - !reference [.version_rules, rules]
  artifacts:
    reports:
      dotenv: version_number.env
    paths:
        - version_number.env